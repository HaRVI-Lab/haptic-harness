name: Haptic Harness Generator Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run nightly tests to catch conda-forge package updates
    - cron: '0 2 * * *'

jobs:
  test-clean-installation:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: 3.9
        
    - name: Run Clean Installation Test
      shell: bash -l {0}
      run: |
        python test_clean_install.py
        
    - name: Run Full Test Suite
      shell: bash -l {0}
      run: |
        conda activate hhgen
        python haptic_harness_generator/run_tests.py
        
    - name: Test Environment Verification
      shell: bash -l {0}
      run: |
        conda activate hhgen
        python verify_environment.py
        
    - name: Upload Test Reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-reports-${{ matrix.os }}
        path: test_outputs/

  test-migration:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: 3.9
        
    - name: Install PyPI version (simulate old installation)
      shell: bash -l {0}
      run: |
        # Create a dummy PyPI package to test migration
        pip install setuptools wheel
        
    - name: Test Migration Script
      shell: bash -l {0}
      run: |
        # First create the proper environment
        conda env create -f environment-locked.yml
        conda activate hhgen
        pip install -e .
        # Then test migration detection
        python migrate_old_install.py
